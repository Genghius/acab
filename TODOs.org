* Todos file
** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/operators/action/action_operators.py::12][Add additional action operators]]
   <2020-03-26 Thu>

   TODO: add rule modification actions:

** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/values/numbers/parsing/NumberParser.py::9][Add fraction parsing]]
   <2020-03-26 Thu>

   def construct_num(toks):

** TODO [[/Volumes/documents/github/py_rule/py_rule/abstract/parsing/util.py::81][Build Arglist properly]]
   <2020-03-26 Thu>

   arglist = VBAR + pp.delimitedList(BIND, delim=COMMA) + VBAR

** TODO [[/Volumes/documents/github/py_rule/py_rule/working_memory/trie_wm/nodes/fact_node.py::84][Check fact node's copy semantics]]
   <2020-03-26 Thu>

   TODO: deeper copy

** TODO [[/Volumes/documents/github/py_rule/py_rule/working_memory/trie_wm/__tests/trie_wm_tests.py::126][Decide on semantics of switching exclusion operators]]
   <2020-03-26 Thu>

   TODO: make this so you can't switch between . and ! ?

** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/values/weights/weight_balance.py::15][Decide what to do with weight balancing]]
   <2020-03-26 Thu>

   class WeightBalance:

** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/analysis/typing/type_instance.py::4][Enable Type inheritance]]
   <2020-03-26 Thu>

   class TypeInstance(Type):

** TODO [[/Volumes/documents/github/py_rule/py_rule/working_memory/trie_wm/parsing/QueryParser.py::77][Expand binding syntax and semantics]]
   <2020-03-26 Thu>

   TODO add syntax for binding a sentence

** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/analysis/typing/__tests/typing_tests.py::523][Expand polytype testing]]
   <2020-03-26 Thu>

   def test_typing_polytype_fail(self):

** TODO [[/Volumes/documents/github/py_rule/py_rule/abstract/__tests/context_tests.py::68][Finish Testing Contexts]]
   <2020-03-26 Thu>

   def test_set_all_alts(self):

** TODO [[/Volumes/documents/github/py_rule/py_rule/working_memory/trie_wm/trie_working_memory.py::64][Fix Working memory Query]]
   <2020-03-26 Thu>

   def query(self, s):

** TODO [[/Volumes/documents/github/py_rule/py_rule/engines/__tests/bdi_tests.py::11][Implement BDI tests]]
   <2020-03-26 Thu>

   class BDI_TESTS(unittest.TestCase):

** TODO [[/Volumes/documents/github/py_rule/py_rule/engines/__tests/trie_engine_logic_tests.py::11][Implement Engine logic tests]]
   <2020-03-26 Thu>

   class Engine_Logic_Tests(unittest.TestCase):

** TODO [[/Volumes/documents/github/py_rule/py_rule/agendas/expander_agenda.py::3][Implement Expander Agenda]]
   <2020-03-26 Thu>

   class ExpanderAgenda(Agenda):

** TODO [[/Volumes/documents/github/py_rule/py_rule/abstract/layer.py::34][Implement logic for memoized rule selectors]]
   <2020-03-26 Thu>

   self._memoized_rules = []

** TODO [[/Volumes/documents/github/py_rule/py_rule/abstract/production_operator.py::20][Implement operator infix logic]]
   <2020-03-26 Thu>

   self._infix = infix

** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/analysis/typing/nodes/operator_def_node.py::63][Implement operator refinement]]
   <2020-03-26 Thu>

   TODO refine the type of the operator at head

** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/analysis/typing/type_checker.py::139][Implement operator type checking]]
   <2020-03-26 Thu>

   def validate(self):

** TODO [[/Volumes/documents/github/py_rule/py_rule/abstract/pipeline.py::53][Implement Pipeline Interface]]
   <2020-03-26 Thu>

   def input_constraints(self):

** TODO [[/Volumes/documents/github/py_rule/py_rule/abstract/pipeline.py::31][Implement Pipeline verification]]
   <2020-03-26 Thu>

   def verify(self, engine):

** TODO [[/Volumes/documents/github/py_rule/py_rule/agendas/sandbox_agenda.py::4][Implement SandboxAgenda]]
   <2020-03-26 Thu>

   class SandboxAgenda(Agenda):

** TODO [[/Volumes/documents/github/py_rule/py_rule/engines/__tests/perform_transform_tests.py::25][Implement Transform performance tests]]
   <2020-03-26 Thu>

   @unittest.skip("Broken")

** TODO [[/Volumes/documents/github/py_rule/py_rule/engines/__tests/perform_transform_tests.py::3][Implement Transform rebind tests]]
   <2020-03-26 Thu>

   TODO implement transform rebind

** TODO [[/Volumes/documents/github/py_rule/py_rule/engines/__tests/perform_transform_tests.py::2][Implement Transform tests]]
   <2020-03-26 Thu>

   TODO Implement transform tests

** TODO [[/Volumes/documents/github/py_rule/py_rule/working_memory/trie_wm/nodes/fact_node.py::181][Implement trie unification?]]
   <2020-03-26 Thu>

   def _unify(self, other):

** TODO [[/Volumes/documents/github/py_rule/py_rule/working_memory/trie_wm/trie_rule.py::9][Implement TrieRule features]]
   <2020-03-26 Thu>

   class TrieRule(Rule):

** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/analysis/typing/typing_module.py::6][Implement typing module spec]]
   <2020-03-26 Thu>

   class TypingSpec(ModuleSpecification):

** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/structures/theoretic_game/game.py::13][Improve GameTheory Module]]
   <2020-03-26 Thu>

   class Game:

** TODO [[/Volumes/documents/github/py_rule/py_rule/abstract/query.py::48][Improve semantics of Query.to_sentences]]
   <2020-03-26 Thu>

   def to_sentences(self):

** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/structures/time/pattern.py::21][Improve Time Pattern sorting]]
   <2020-03-26 Thu>

   class Pattern(PyRuleValue):

** TODO [[/Volumes/documents/github/py_rule/py_rule/abstract/value.py::13][Make PyRuleValue._name a GUID]]
   <2020-03-26 Thu>

   self._name = "AnonValue"

** TODO [[/Volumes/documents/github/py_rule/py_rule/working_memory/trie_wm/nodes/fact_node.py::147][Move regex testing out of fact node]]
   <2020-03-26 Thu>

   def test_regexs_for_matching(self, regexs, currentData, preupdate=None):

** TODO [[/Volumes/documents/github/py_rule/py_rule/agendas/map_over_agenda.py::6][Parameterise MapOverAgenda]]
   <2020-03-26 Thu>

   class MapOverAgenda(Agenda):

** TODO [[/Volumes/documents/github/py_rule/py_rule/agendas/::6][Parameterize Agendas]]
   <2020-03-26 Thu>

   -rw-r--r--  1 johngrey staff  470 Mar 25 22:11 cycle_agenda.py

** TODO [[/Volumes/documents/github/py_rule/py_rule/working_memory/trie_wm/trie_working_memory.py::43][Possibly adapt working memory add to retract negated sentences]]
   <2020-03-26 Thu>

   TODO Retract negated sentences

** TODO [[/Volumes/documents/github/py_rule/py_rule/abstract/production_operator.py::17][Possibly use subclass DFS for operator name registration]]
   <2020-03-26 Thu>

   self._op_str = self.__class__.__name__

** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/analysis/typing/__tests/typing_tests.py::106][Re-add variable merging]]
   <2020-03-26 Thu>

   def test_basic_inference(self):

** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/io/network/unity_server.py::10][Test and Check Unity Server]]
   <2020-03-26 Thu>

   class UnityServer(Agenda):

** TODO [[/Volumes/documents/github/py_rule/py_rule/engines/__tests/trie_engine_tests.py::10][Test Engine Rule selection]]
   <2020-03-26 Thu>

   class Engine_Tests(unittest.TestCase):

** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/values/numbers/__tests/number_query_tests.py::122][Test number rule binding expansiosn]]
   <2020-03-26 Thu>

   def test_rule_binding_expansion(self):

** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/structures/time/__tests/time_tests.py::446][Test time pattern optional events and silence]]
   <2020-03-26 Thu>

   #TODO: test event optional

** TODO [[/Volumes/documents/github/py_rule/py_rule/abstract/trie/__tests/trie_node_tests.py::28][Test TrieNode SplitTests]]
   <2020-03-26 Thu>

   def test_split_tests(self):

** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/analysis/typing/__tests/typing_tests.py::543][Test type inference for rules]]
   <2020-03-26 Thu>

   def test_add_rule(self):

** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/analysis/typing/__tests/typedef_parser_tests.py::66][Test typing with bad specifications]]
   <2020-03-26 Thu>

   def test_typedef_with_bad_vars(self):

** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/analysis/typing/type_definition.py::19][TypeDefinition unify shared variables]]
   <2020-03-26 Thu>

   TODO unify shared variables across structure sentences to have

** TODO [[/Volumes/documents/github/py_rule/py_rule/abstract/sentence.py::26][Update Sentence.__str__ ]]
   <2020-03-26 Thu>

   def __str__(self):

** TODO [[/Volumes/documents/github/py_rule/py_rule/agendas/parsing/::4][Write Parser for Agendas]]
   <2020-03-26 Thu>

