* Todos file
  :LOGBOOK:
  CLOCK: [2020-05-15 Fri 19:52]--[2020-05-15 Fri 20:17] =>  0:25
  CLOCK: [2020-05-14 Thu 19:24]--[2020-05-14 Thu 19:49] =>  0:25
  CLOCK: [2020-05-14 Thu 18:21]--[2020-05-14 Thu 18:46] =>  0:25
  CLOCK: [2020-05-12 Tue 20:19]--[2020-05-12 Tue 20:44] =>  0:25
  CLOCK: [2020-05-12 Tue 19:31]--[2020-05-12 Tue 19:57] =>  0:26
  CLOCK: [2020-05-12 Tue 18:29]--[2020-05-12 Tue 18:54] =>  0:25
  CLOCK: [2020-05-12 Tue 17:53]--[2020-05-12 Tue 18:18] =>  0:25
  CLOCK: [2020-05-12 Tue 17:18]--[2020-05-12 Tue 17:43] =>  0:25
  CLOCK: [2020-05-11 Mon 17:27]--[2020-05-11 Mon 18:10] =>  0:43
  CLOCK: [2020-05-11 Mon 16:51]--[2020-05-11 Mon 17:16] =>  0:25
  CLOCK: [2020-05-11 Mon 15:59]--[2020-05-11 Mon 16:24] =>  0:25
  CLOCK: [2020-05-11 Mon 15:16]--[2020-05-11 Mon 15:41] =>  0:25
  :END:
** Functionality
*** TODO [[/Volumes/documents/github/py_rule/py_rule/abstract/production_operator.py::20][Implement operator infix logic]]                                         :parsing:
    <2020-03-26 Thu>

    self._infix = infix

*** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/analysis/typing/type_checker.py::139][Implement operator type checking]]                                       :typing:
    <2020-03-26 Thu>

    def validate(self):

*** TODO [[/Volumes/documents/github/py_rule/py_rule/abstract/pipeline.py::53][Implement Pipeline Interface]]                                           :api:
    <2020-03-26 Thu>

    def input_constraints(self):

*** TODO [[/Volumes/documents/github/py_rule/py_rule/abstract/pipeline.py::31][Implement Pipeline verification]]                                        :api:
    <2020-03-26 Thu>

    def verify(self, engine):

*** TODO [[/Volumes/documents/github/py_rule/py_rule/working_memory/trie_wm/nodes/fact_node.py::181][Implement trie unification?]]                                            :semantics:
    <2020-03-26 Thu>

    def _unify(self, other):

*** TODO [[/Volumes/documents/github/py_rule/py_rule/working_memory/trie_wm/trie_rule.py::9][Implement TrieRule features]]                                            :semantics:
    <2020-03-26 Thu>

    class TrieRule(Rule):

*** DONE [[/Volumes/documents/github/acab/acab/modules/analysis/typing/parsing/TypeDefParser.py::53][add sum types]]
    CLOSED: [2020-07-13 Mon 17:12]
   <2020-04-23 Thu>

*** DONE [[/Volumes/documents/github/py_rule/py_rule/abstract/parsing/util.py::81][Build Arglist properly]]                                                 :parsing:
    CLOSED: [2020-07-13 Mon 17:13]
    <2020-03-26 Thu>

    arglist = VBAR + pp.delimitedList(BIND, delim=COMMA) + VBAR

*** DONE [[/Volumes/documents/github/acab/py_rule/working_memory/trie_wm/nodes/fact_node.py::84][Check fact node's copy semantics]]                                       :semantics:
    CLOSED: [2020-07-13 Mon 17:13]
    <2020-03-26 Thu>

    TODO: deeper copy

*** DONE [[/Volumes/documents/github/py_rule/py_rule/modules/analysis/typing/typing_module.py::6][Implement typing module spec]]                                           :api:
    CLOSED: [2020-07-13 Mon 17:14]
    <2020-03-26 Thu>

    class TypingSpec(ModuleSpecification):

*** DONE [[/Volumes/documents/github/py_rule/py_rule/agendas/parsing/::4][Write Parser for Agendas]]                                               :parsing:
    CLOSED: [2020-07-13 Mon 17:14]
    <2020-03-26 Thu>

*** DONE [[/Volumes/documents/github/py_rule/py_rule/modules/structures/agenda/AgendaParser.py::22][add query sections to agendas, layers, pipelines etc]]
    CLOSED: [2020-05-07 Thu 15:18]
   <2020-04-12 Sun>
  
   selection.amount: $x(::Number)

*** DONE [[/Volumes/documents/github/py_rule/py_rule/abstract/production_operator.py::107][Implement ProductionContainer.get_bindings]]
    CLOSED: [2020-04-11 Sat 19:43]
    <2020-03-30 Mon>
    now as method var_set

    def get_bindings(self):

*** DONE [[/Volumes/documents/github/py_rule/py_rule/modules/analysis/typing/type_definition.py::19][TypeDefinition unify shared variables]]                                  :typing:
    CLOSED: [2020-04-11 Sat 20:37]
    <2020-03-26 Thu>

    TODO unify shared variables across structure sentences to have

*** DONE [[/Volumes/documents/github/acab/acab/working_memory/trie_wm/trie_working_memory.py::64][Fix Working memory Query]]
    CLOSED: [2020-03-26 Thu 23:16]
    <2020-03-26 Thu>

    def query(self, s):

*** DONE [[/Volumes/documents/github/acab/acab/working_memory/trie_wm/parsing/ActionParser.py::38][Allow default assertion of sentences in actions]]                        :parsing:
    CLOSED: [2020-03-28 Sat 03:19]
    <2020-03-27 Fri>

    action_component = PU.N(WMU.OPERATOR_S, HOTLOAD_OPERATORS) \

*** DONE [[/Volumes/documents/github/acab/acab/modules/analysis/typing/nodes/operator_def_node.py::63][Implement operator refinement]]
    CLOSED: [2020-03-28 Sat 00:01]
    <2020-03-26 Thu>

    TODO refine the type of the operator at head

** Improvements
*** TODO [[/Volumes/documents/github/acab/acab/modules/operators/pattern_match/pattern_match_module.py::2][implement pattern match transform operator]]
    <2020-04-24 Fri>
  
  The module spec for pattern matching

*** TODO [[/Volumes/documents/github/acab/acab/modules/analysis/typing/parsing/TypeDefParser.py::53][add trie diffs between layers]]
   <2020-04-23 Thu>

*** TODO [[/Volumes/documents/github/acab/acab/abstract/parsing/repl_commands.py::112][add asyncio]]
    <2020-04-19 Sun>
  
    register(ReplE.STEP, engine_step)

*** TODO [[/Volumes/documents/github/acab/acab/modules/structures/agenda/AgendaParser.py::22][add chained transforms]]
   <2020-04-12 Sun>
  
   selection.amount: $x(::Number)

*** TODO [[/Volumes/documents/github/acab/acab/modules/structures/agenda/AgendaParser.py::22][remove need for end statements]]
   <2020-04-12 Sun>
  
   selection.amount: $x(::Number)

*** TODO [[/Volumes/documents/github/acab/acab/abstract/engine.py::31][Add Numpy Random Generator to engine?]]
   <2020-04-11 Sat>

*** TODO [[/Volumes/documents/github/acab/acab/engines/__tests/perform_transform_tests.py::42][Make transforms that rebind to themselves fail]]
    <2020-03-28 Sat>

    stub_transform = TP.parseString('$a AddOp 20 -> $y, $b MulOp 2 -> $z')

*** TODO [[/Volumes/documents/github/acab/acab/modules/operators/action/action_operators.py::12][Add additional action operators]]                                        :api:
    <2020-03-26 Thu>

    TODO: add rule modification actions:
*** TODO [[/Volumes/documents/github/acab/acab/modules/values/numbers/parsing/NumberParser.py::9][Add fraction parsing]]                                                   :parsing:
    <2020-03-26 Thu>

    def construct_num(toks):

*** TODO [[/Volumes/documents/github/acab/acab/modules/values/weights/weight_balance.py::15][Decide what to do with weight balancing]]                                :modules:
    <2020-03-26 Thu>

    class WeightBalance:

*** TODO [[/Volumes/documents/github/acab/acab/modules/analysis/typing/type_instance.py::4][Enable Type inheritance]]                                                :typing:
    <2020-03-26 Thu>

    class TypeInstance(Type):

*** TODO [[/Volumes/documents/github/acab/acab/working_memory/trie_wm/parsing/QueryParser.py::77][Expand binding syntax and semantics]]                                    :parsing:
    <2020-03-26 Thu>

    TODO add syntax for binding a sentence

*** TODO [[/Volumes/documents/github/acab/acab/modules/structures/theoretic_game/game.py::13][Improve GameTheory Module]]                                              :modules:
    <2020-03-26 Thu>

    class Game:

*** TODO [[/Volumes/documents/github/acab/acab/abstract/query.py::48][Improve semantics of Query.to_sentences]]                                :semantics:
    <2020-03-26 Thu>

    def to_sentences(self):

*** TODO [[/Volumes/documents/github/acab/acab/modules/structures/time/pattern.py::21][Improve Time Pattern sorting]]                                           :performance:
    <2020-03-26 Thu>

    class Pattern(AcabValue):

*** TODO [[/Volumes/documents/github/acab/acab/abstract/production_operator.py::17][Possibly use subclass DFS for operator name registration]]               :performance:
    <2020-03-26 Thu>

    self._op_str = self.__class__.__name__

*** TODO [[/Volumes/documents/github/acab/acab/abstract/action.py::105][Refine ActionComponent.to_sentence]]                                     :semantics:
    <2020-03-27 Fri>

    def to_sentence(self):

*** TODO [[/Volumes/documents/github/acab/acab/modules/values/numbers/__tests/number_query_tests.py::126][should rule binding expansion effect transforms?]]
    <2020-03-30 Mon>

    result = RP.parseString("ρ::a.rule:\n$y.b.$z?\n\n$x + 2 -> $y\n\n+($y)\n\nend")[0][-1]

    # Remove quotes from around strings:
*** TODO [[/Volumes/documents/github/acab/acab/abstract/comparison.py::81][replace magic string with a constant]]
     <2020-04-02 Thu>

     return self._op == "RegMatch"

*** TODO [[/Volumes/documents/github/acab/acab/modules/analysis/typing/type_checker.py::98][possibly add push and pop typing contexts]]
    <2020-04-02 Thu>

    # self.push_typing_context()

*** TODO [[/Volumes/documents/github/acab/acab/util.py::56][integrate UUIDs]]
    <2020-04-02 Thu>

    UUID_HEAD        = "υ"

*** TODO [[/Volumes/documents/github/acab/acab/abstract/printing/util.py::61][refactor regex parsing to hold params as well]]
    <2020-04-04 Sat>

*** TODO [[/Volumes/documents/github/acab/acab/working_memory/trie_wm/trie_working_memory.py::213][do DFS/BFS/Leaf search as a transform]]
  <2020-04-24 Fri>
  
  # TODO: Handle DFS/BFS/Leaf retrieval

*** DONE [[/Volumes/documents/github/acab/acab/agendas/::6][Parameterize Agendas]]                                                   :parsing:
    CLOSED: [2020-07-13 Mon 17:45]
    <2020-03-26 Thu>

    -rw-r--r--  1 johngrey staff  470 Mar 25 22:11 cycle_agenda.py

*** DONE [[/Volumes/documents/github/acab/acab/abstract/agenda.py::13][Make Agenda a subclass of rule]]
    CLOSED: [2020-07-13 Mon 17:15]
    <2020-04-04 Sat>

    # TODO: make this a subclass of production component?

*** DONE [[/Volumes/documents/github/acab/acab/abstract/layer.py::25][Make Layer a subclass of rule]]
    CLOSED: [2020-07-13 Mon 17:15]
    <2020-04-04 Sat>

    class Layer:

*** DONE [[/Volumes/documents/github/acab/acab/abstract/pipeline.py::17][Make pipeline a subclass of rule]]
    CLOSED: [2020-07-13 Mon 17:16]
    <2020-04-04 Sat>

    class Pipeline:

*** DONE [[/Volumes/documents/github/acab/acab/abstract/rule.py::15][Make rule a subclass of production container]]
    CLOSED: [2020-07-13 Mon 17:16]
    <2020-04-04 Sat>

    class Rule(AcabValue):
*** DONE [[/Volumes/documents/github/acab/acab/working_memory/trie_wm/nodes/fact_node.py::33][update face_node copying/construction]]
    CLOSED: [2020-07-13 Mon 17:23]
    <2020-04-03 Fri>

    # TODO add original tags, vars and possible update type_str

*** DONE [[/Volumes/documents/github/acab/acab/abstract/engine.py::174][shift rule running logic into rule and production containers]]
    CLOSED: [2020-04-24 Fri 22:01]
   <2020-04-24 Fri>
  
     def _perform_actions(self, data, act_set):

*** DONE [[/Volumes/documents/github/acab/acab/abstract/parsing/util.py::78][use pp.removeQuotes on string and regex parsing]]
    CLOSED: [2020-04-24 Fri 22:08]
    <2020-03-31 Tue>

*** DONE [[/Volumes/documents/github/acab/acab/working_memory/trie_wm/parsing/FactParser.py::93][integrate sentence statement]]
    CLOSED: [2020-04-24 Fri 22:10]
    <2020-04-01 Wed>

    # Statement to specify multiple sub sentences

*** DONE [[/Volumes/documents/github/acab/acab/abstract/trie/trie.py::12][Add WeakValueDict to Trie to provide direct access to nodes]]            :semantics:
    CLOSED: [2020-04-10 Fri 20:52]
    <2020-03-26 Thu>

    def __init__(self, node_type=TrieNode):

*** DONE [[/Volumes/documents/github/acab/acab/abstract/value.py::13][Make AcabValue._name a GUID]]                                          :performance:
    CLOSED: [2020-04-10 Fri 20:52]
    <2020-03-26 Thu>

    self._name = "AnonValue"

*** DONE [[/Volumes/documents/github/acab/acab/abstract/sentence.py::26][Update Sentence.__str__ ]]                                               :parsing:
    CLOSED: [2020-04-10 Fri 20:54]
    <2020-03-26 Thu>

    def __str__(self):

*** DONE [[/Volumes/documents/github/acab/acab/working_memory/trie_wm/trie_working_memory.py::43][Possibly adapt working memory add to retract negated sentences]]
    CLOSED: [2020-03-28 Sat 00:08]
     <2020-03-26 Thu>

     TODO Retract negated sentences

** Testing
*** TODO [[/Volumes/documents/github/acab/py_rule/working_memory/trie_wm/__tests/trie_wm_tests.py::126][Decide on semantics of switching exclusion operators]]

    TODO: make this so you can't switch between . and ! ?

*** TODO [[/Volumes/documents/github/py_rule/py_rule/engines/__tests/bdi_tests.py::11][Implement BDI tests]]
    <2020-03-26 Thu>

    class BDI_TESTS(unittest.TestCase):
*** TODO [[/Volumes/documents/github/py_rule/py_rule/modules/io/network/unity_server.py::10][Test and Check Unity Server]]
    <2020-03-26 Thu>

    class UnityServer(Agenda):

*** TODO [[/Volumes/documents/github/acab/acab/engines/__tests/trie_engine_tests.py::10][Test Engine Rule selection]]
    <2020-03-26 Thu>

    class Engine_Tests(unittest.TestCase):

*** TODO [[/Volumes/documents/github/acab/acab/modules/structures/time/__tests/time_tests.py::446][Test time pattern optional events and silence]]
    <2020-03-26 Thu>

    #TODO: test event optional

*** TODO [[/Volumes/documents/github/acab/acab/abstract/trie/__tests/trie_node_tests.py::28][Test TrieNode SplitTests]]
    <2020-03-26 Thu>

    def test_split_tests(self):

*** TODO [[/Volumes/documents/github/acab/acab/modules/analysis/typing/__tests/typing_tests.py::543][Test type inference for rules]]
    <2020-03-26 Thu>

    def test_add_rule(self):

*** TODO [[/Volumes/documents/github/acab/acab/modules/analysis/typing/__tests/typedef_parser_tests.py::66][Test typing with bad specifications]]
    <2020-03-26 Thu>

    def test_typedef_with_bad_vars(self):

**** Test

*** DONE [[/Volumes/documents/github/acab/acab/modules/analysis/typing/__tests/typing_tests.py::523][Expand polytype testing]]
    CLOSED: [2020-04-19 Sun 23:06]
    <2020-03-26 Thu>

    def test_typing_polytype_fail(self):

*** DONE [[/Volumes/documents/github/acab/acab/abstract/__tests/context_tests.py::68][Finish Testing Contexts]]
    CLOSED: [2020-04-19 Sun 23:06]
    <2020-03-26 Thu>

    def test_set_all_alts(self):

*** DONE [[/Volumes/documents/github/acab/acab/engines/__tests/trie_engine_logic_tests.py::11][Implement Engine logic tests]]
    CLOSED: [2020-04-24 Fri 22:12]
    <2020-03-26 Thu>

    class Engine_Logic_Tests(unittest.TestCase):

*** DONE [[/Volumes/documents/github/acab/acab/modules/values/numbers/__tests/number_query_tests.py::122][Test number rule binding expansiosn]]
    CLOSED: [2020-04-24 Fri 22:13]
    <2020-03-26 Thu>

    def test_rule_binding_expansion(self):

*** DONE [[/Volumes/documents/github/acab/acab/engines/__tests/perform_transform_tests.py::25][Implement Transform performance tests]]
    CLOSED: [2020-03-28 Sat 01:10]
    <2020-03-26 Thu>

    @unittest.skip("Broken")

*** DONE [[/Volumes/documents/github/acab/acab/engines/__tests/perform_transform_tests.py::3][Implement Transform rebind tests]]
    CLOSED: [2020-03-28 Sat 01:11]
    <2020-03-26 Thu>

    TODO implement transform rebind

*** DONE [[/Volumes/documents/github/acab/acab/engines/__tests/perform_transform_tests.py::2][Implement Transform tests]]
    CLOSED: [2020-03-28 Sat 01:11]
    <2020-03-26 Thu>

    TODO Implement transform tests

*** DONE [[/Volumes/documents/github/acab/acab/working_memory/trie_wm/nodes/fact_node.py::147][Move regex testing out of fact node]]
    CLOSED: [2020-03-28 Sat 19:44]
    <2020-03-26 Thu>

    def test_regexs_for_matching(self, regexs, currentData, preupdate=None):

*** DONE [[/Volumes/documents/github/acab/acab/modules/analysis/typing/__tests/typing_tests.py::106][Re-add variable merging]]
    CLOSED: [2020-03-28 Sat 19:44]
    <2020-03-26 Thu>

    def test_basic_inference(self):

